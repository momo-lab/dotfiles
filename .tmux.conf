# prefix
set -g prefix C-t
unbind C-b

# 256色対応
set -g default-terminal "xterm-256color"
set -g terminal-overrides "term:colors=256"
set -g display-time 2000

# バッファサイズ
set -g history-limit 10000

# リロード
bind-key r    source-file ~/.tmux.conf \; display "Reloaded!"
bind-key C-r  source-file ~/.tmux.conf \; display "Reloaded!"

# キーストロークのディレイを減らす
set -sg escape-time 0

# インデックスを1から始める
set -g base-index 1
setw -g pane-base-index 1

# copy modeのスタイルをviにする
set-window-option -g mode-keys vi
# clipboardにwin32yank.exeを使用する
bind-key ]   run-shell 'win32yank.exe -o | xargs -0 -I{} tmux set-buffer -- {} && tmux paste-buffer'
bind-key C-] run-shell 'win32yank.exe -o | xargs -0 -I{} tmux set-buffer -- {} && tmux paste-buffer'

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind-key s   split-window -vc "#{pane_current_path}"
bind-key C-s split-window -vc "#{pane_current_path}"
bind-key v   split-window -hc "#{pane_current_path}"
bind-key C-v split-window -hc "#{pane_current_path}"

# move around panes with hjkl, as one would in vim after pressing ctrl-w
# bind h   select-pane -L
# bind C-h select-pane -L
# bind j   select-pane -D
# bind C-j select-pane -D
# bind k   select-pane -U
# bind C-k select-pane -U
# bind l   select-pane -R
# bind C-l select-pane -R

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key   "h" if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key "C-h" if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key   "j" if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key "C-j" if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key   "k" if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key "C-k" if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key   "l" if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key "C-l" if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key   "t" if-shell "$is_vim" "send-keys C-t"  "select-pane -l"
bind-key "C-t" if-shell "$is_vim" "send-keys C-t"  "select-pane -l"

# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind-key -r <   resize-pane -L 1
bind-key -r >   resize-pane -R 1
bind-key -r +   resize-pane -D 1
bind-key -r -   resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind-key : command-prompt

set-option -g pane-border-status bottom
set-option -g pane-border-format "#(~/.tmux-pane-border '#{pane_current_path}' '#P' '#{pane_active}')"
set-option -g pane-border-style fg=colour008
set-option -g pane-active-border-style fg=blue
