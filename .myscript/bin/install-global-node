#!/bin/bash
set -e

# Respect XDG_CONFIG_HOME
CONFIG_DIR="${XDG_CONFIG_HOME:-$HOME/.config}/$(basename $0)"
TOOLS_FILE="$CONFIG_DIR/packages.txt"

ensure_tools_file() {
  mkdir -p "$CONFIG_DIR"
  touch "$TOOLS_FILE"
}

install_entry() {
  local entry="$1"
  IFS=":" read -r manager pkg <<< "$entry"

  echo "Installing $pkg with $manager"

  case "$manager" in
    pnpm) pnpm add -g "$pkg" ;;
    npm)  npm install -g "$pkg" ;;
    yarn) yarn global add "$pkg" ;;
    *)
      echo "Unknown manager: $manager"
      return 1
      ;;
  esac
}

add_tool() {
  ensure_tools_file
  entry="$1"
  if grep -Fxq "$entry" "$TOOLS_FILE"; then
    echo "$entry is already registered. Skipping installation."
  else
    echo "Adding $entry to $TOOLS_FILE"
    echo "$entry" >> "$TOOLS_FILE"
    install_entry "$entry"
  fi
}

install_tools() {
  if [ ! -f "$TOOLS_FILE" ]; then
    echo "No global-tools.txt found at $TOOLS_FILE"
    exit 1
  fi

  while IFS= read -r line; do
    [[ -z "$line" || "$line" == \#* ]] && continue
    install_entry "$line"
  done < "$TOOLS_FILE"
}

list_tools() {
  ensure_tools_file
  echo "Registered tools in $TOOLS_FILE:"
  cat "$TOOLS_FILE"
}

case "$1" in
  add) shift; add_tool "$1" ;;
  list) list_tools ;;
  install|"") install_tools ;;
  *)
    echo "Unknown command: $1"
    echo "Usage: $(basename $0) [add <manager>:<pkg> | list | install]"
    exit 1
    ;;
esac
